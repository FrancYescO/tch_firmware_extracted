local Tests_Type_ = {
  objectType = {
    name = "Tests.Type.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      StandardString = {
        access = "readWrite",
        type = "string",
        default = "",
      },
      ReadOnlyString = {
        access = "readOnly",
        type = "string",
        default = "donotwriteme",
      },
      MinLengthString = {
        access = "readWrite",
        type = "string",
        default = "minimum10chars",
        min = "10",
      },
      MaxLengthString = {
        access = "readWrite",
        type = "string",
        default = "maximum26chars",
        max = "26",
      },
      MinMaxString = {
        access = "readWrite",
        type = "string",
        default = "min5max15",
        min = "5",
        max = "15",
      },
      EnumerationString = {
        access = "readWrite",
        type = "string",
        default = "entry1",
        enumeration = {
          "entry1",
          "entry2",
          "entry3",
        },
      },
      PathRefString = {
        access = "readWrite",
        type = "string",
        default = "Tests.Some.Path.1.",
        pathRef = true,
      },
      PathRefParentString = {
        access = "readWrite",
        type = "string",
        default = "Tests.Some.1.Path.2.Parameter",
        targetParent = "Tests.Some.{i}.Path.{i}.",
        pathRef = true,
      },
      StandardListString = {
        access = "readWrite",
        type = "string",
        list = true,
        default = "this,is,a,list",
      },
      MinLengthListString = {
        access = "readWrite",
        type = "string",
        list = true,
        default = "list,min,10chars",
        min = "10",
      },
      MaxLengthListString = {
        access = "readWrite",
        type = "string",
        list = true,
        default = "list,max,26chars",
        max = "26",
      },
      MinMaxListString = {
        access = "readWrite",
        type = "string",
        list = true,
        default = "list,min5,max18",
        min = "5",
        max = "18",
      },
      StandardBoolean = {
        access = "readWrite",
        type = "boolean",
        default = "1",
      },
      ReadOnlyBoolean = {
        access = "readOnly",
        type = "boolean",
        default = "0",
      },
      StandardUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "1",
      },
      ReadOnlyUnsignedInt = {
        access = "readOnly",
        type = "unsignedInt",
        default = "1",
      },
      MinValueUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "100",
        range = {
          {
            min = "100",
          },
        },
      },
      MaxValueUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "100",
        range = {
          {
            max = "100",
          },
        },
      },
      MinMaxUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "50",
        range = {
          {
            min = "10",
            max = "100",
          },
        },
      },
      MultiRangeUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "10",
        range = {
          {
            min = "10",
            max = "40",
          },
          {
            min = "60",
            max = "100",
          },
        },
      },
      StandardListUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "1,2,3,4",
        list = true,
      },
      MinValueListUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "100,101,102,103",
        range = {
          {
            min = "100",
          },
        },
        list = true,
      },
      MaxValueListUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "97,98,99,100",
        range = {
          {
            max = "100",
          },
        },
        list = true,
      },
      MinMaxListUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "10,50,100",
        range = {
          {
            min = "10",
            max = "100",
          },
        },
        list = true,
      },
      MultiRangeListUnsignedInt = {
        access = "readWrite",
        type = "unsignedInt",
        default = "10,40,60,100",
        range = {
          {
            min = "10",
            max = "40",
          },
          {
            min = "60",
            max = "100",
          },
        },
        list = true,
      },
      StandardInt = {
        access = "readWrite",
        type = "int",
        default = "1",
      },
      ReadOnlyInt = {
        access = "readOnly",
        type = "int",
        default = "1",
      },
      MinValueInt = {
        access = "readWrite",
        type = "int",
        default = "100",
        range = {
          {
            min = "100",
          },
        },
      },
      MaxValueInt = {
        access = "readWrite",
        type = "int",
        default = "100",
        range = {
          {
            max = "100",
          },
        },
      },
      MinMaxInt = {
        access = "readWrite",
        type = "int",
        default = "50",
        range = {
          {
            min = "-100",
            max = "100",
          },
        },
      },
      MultiRangeInt = {
        access = "readWrite",
        type = "int",
        default = "-50",
        range = {
          {
            min = "-100",
            max = "-10",
          },
          {
            min = "10",
            max = "100",
          },
        },
      },
      StandardListInt = {
        access = "readWrite",
        type = "int",
        default = "1,2,3,4",
        list = true,
      },
      MinValueListInt = {
        access = "readWrite",
        type = "int",
        default = "100,101,102,103",
        range = {
          {
            min = "100",
          },
        },
        list = true,
      },
      MaxValueListInt = {
        access = "readWrite",
        type = "int",
        default = "97,98,99,100",
        range = {
          {
            max = "100",
          },
        },
        list = true,
      },
      MinMaxListInt = {
        access = "readWrite",
        type = "int",
        default = "-100,50,100",
        range = {
          {
            min = "-100",
            max = "100",
          },
        },
        list = true,
      },
      MultiRangeListInt = {
        access = "readWrite",
        type = "int",
        default = "-100,-10,10,100",
        range = {
          {
            min = "-100",
            max = "-10",
          },
          {
            min = "10",
            max = "100",
          },
        },
        list = true,
      },
      StandardBase64 = {
        access = "readWrite",
        type = "base64",
        default = "",
      },
      StandardDateTime = {
        access = "readWrite",
        type = "dateTime",
        default = "0001-01-01T00:00:00Z",
      },
      StandardHexBinary = {
        access = "readWrite",
        type = "hexBinary",
        default = "",
      },
      StandardLong = {
        access = "readWrite",
        type = "long",
        default = "-1",
      },
      StandardUnsignedLong = {
        access = "readWrite",
        type = "unsignedLong",
        default = "0",
      },
    }
  }
}

local function test_config(option, default)
  return {
    config = "types",
    sectionname = "test_type",
    option = option,
    default = default,
  }
end

local uci_binding = {
  StandardString = test_config("standard_string"),
  ReadOnlyString = test_config("readonly_string"),
  MinLengthString = test_config("minlength_string"),
  MaxLengthString = test_config("maxlength_string"),
  MinMaxString = test_config("minmax_string"),
  EnumerationString = test_config("enum_string"),
  PathRefString = test_config("pathref_string"),
  PathRefParentString = test_config("pathrefparent_string"),
  StandardListString = test_config("standard_liststring"),
  MinLengthListString = test_config("minlength_liststring"),
  MaxLengthListString = test_config("maxlength_liststring"),
  MinMaxListString = test_config("minmax_liststring"),
  StandardBoolean = test_config("standard_boolean"),
  ReadOnlyBoolean = test_config("readonly_boolean"),
  StandardUnsignedInt = test_config("standard_unsignedint"),
  ReadOnlyUnsignedInt = test_config("readonly_unsignedint"),
  MinValueUnsignedInt = test_config("min_unsignedint"),
  MaxValueUnsignedInt = test_config("max_unsignedint"),
  MinMaxUnsignedInt = test_config("minmax_unsignedint"),
  MultiRangeUnsignedInt = test_config("multirange_unsignedint"),
  StandardListUnsignedInt = test_config("standard_listunsignedint"),
  MinValueListUnsignedInt = test_config("min_listunsignedint"),
  MaxValueListUnsignedInt = test_config("max_listunsignedint"),
  MinMaxListUnsignedInt = test_config("minmax_listunsignedint"),
  MultiRangeListUnsignedInt = test_config("multirange_listunsignedint"),
  StandardInt = test_config("standard_int"),
  ReadOnlyInt = test_config("readonly_int"),
  MinValueInt = test_config("min_int"),
  MaxValueInt = test_config("max_int"),
  MinMaxInt = test_config("minmax_int"),
  MultiRangeInt = test_config("multirange_int"),
  StandardListInt = test_config("standard_listint"),
  MinValueListInt = test_config("min_listint"),
  MaxValueListInt = test_config("max_listint"),
  MinMaxListInt = test_config("minmax_listint"),
  MultiRangeListInt = test_config("multirange_listint"),
  StandardBase64 = test_config("standard_base64"),
  StandardDateTime = test_config("standard_datetime", "0001-01-01T00:00:00Z"),
  StandardHexBinary = test_config("standard_hexbinary"),
  StandardLong = test_config("standard_long", "-1"),
  StandardUnsignedLong = test_config("standard_unsignedlong", "0"),
}

mapper("simpleuci").connect(Tests_Type_,uci_binding)

register(Tests_Type_)
