#[ ifup = "$ACTION" ] || exit

. $IPKG_INSTROOT/lib/config/uci.sh
. $IPKG_INSTROOT/lib/functions.sh
. $IPKG_INSTROOT/lib/functions/syslog.sh

log_local_port=51423
slfwp=''
log_filter_file=$(uci_get system @system[0] log_filter_file)
[ -z "$log_filter_file" ] && log_filter_file="/var/log/filt_msg"

stop_fwd_process () {
	slfwp=$(ps | grep -v awk | awk '/\/etc\/syslog_fwd\/start_fwd/ {print $1}')
	echo "fwdproc '$slfwp' stopping... " >>/var/log/slfwd.err
	[ "$slfwp" ] && kill -9 $slfwp
	slfwp=''
	tail_pid=$(ps | grep -v awk | awk -v pattn="(tail -[fF]|cat).*${log_filter_file}" '$0 ~ pattn {print $1}')
	nc_pid=$(ps | grep -v awk | awk "/(nc -v|socat -u STDIO).*${log_filter_ip}[ :]${log_port}/"' {print $1}')
	if [ -n "${tail_pid}" ] ; then kill -9 ${tail_pid} ; fi
	if [ -n "${nc_pid}" ] ; then kill -9 ${nc_pid} ; fi
}

fwd_syslog_filt_msg() {
		log_filter_ip=$(uci_get system @system[0] log_filter_ip)
		log_port=$(uci_get system @system[0] log_port)
		log_proto=$(uci_get system @system[0] log_proto)
		[ -z "$log_port" ] && log_port=514
		[ -z "$log_proto" ] && log_proto=udp

		stop_fwd_process
		if [ -r ${log_filter_file} -a "${log_filter_ip}" ] ; then
#			echo "iface up; ${log_filter_file} readable; syslog_fwd running processes were (will be restarted): tail_pid='${tail_pid}', nc_pid='${nc_pid}'" >>/var/log/slfwd.txt
			/etc/syslog_fwd/start_fwd ${log_filter_ip} ${log_port} ${log_filter_file} ${log_proto} ${log_local_port} &
#			echo "/etc/syslog_fwd/start_fwd called with ${log_filter_ip} ${log_port} ${log_filter_file} ${log_proto} ${log_local_port}" >>/var/log/slfwd.err
			slfwp=$!
#			echo "fwdproc_bckgnd started; shell_pid exit_status background_pid : '$$' '$?' '$!'" >>/var/log/slfwd.err
			tail_pid=$(ps | grep -v awk | awk -v pattn="(tail -[fF]|cat).*${log_filter_file}" '$0 ~ pattn {print $1}')
			nc_pid=$(ps | grep -v awk | awk "/(nc -v|socat -u STDIO).*${log_filter_ip}[ :]${log_port}/"' {print $1}')
			echo "syslog_fwd running processes: tail_pid='${tail_pid}', nc_pid='${nc_pid}'" >>/var/log/slfwd.err
		fi
}

syslog_iface=""

get_syslog_iface syslog_iface
#syslog_iface="lan"
[ "$syslog_iface" == "$INTERFACE" ] && {
	case "$ACTION" in
		ifup)
			fwd_syslog_filt_msg
			;;
		ifdown)
			stop_fwd_process
			;;
	esac
}
