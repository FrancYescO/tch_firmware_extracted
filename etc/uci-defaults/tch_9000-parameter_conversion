#!/bin/sh

. /lib/functions/uci-defaults.sh

DEBUG=
export DEBUG

echo_debug() {
	if [[ -n $DEBUG ]]; then
		echo $1 >> $DEBUG
	fi
}

if [[ -f /tmp/parameter_conversion.log ]]; then rm /tmp/parameter_conversion.log; fi

if [[ -h /overlay/homeware_conversion -o -d /overlay/homeware_conversion ]]; then

	if [[ -h /overlay/homeware_conversion ]]; then
		old_config=$(readlink /overlay/homeware_conversion)
	else
		old_config=/overlay/homeware_conversion
	fi
	export OLD_UCI_CONFIG=$old_config/etc/config
	old_release_version=$(uci -q -c $old_config/etc/config get version.@version[0].version | awk -F- '{print $1}')

	if [[ "$old_release_version" && -f /etc/parameter_conversion/conversion_$old_release_version ]]; then
		conversion_file=/etc/parameter_conversion/conversion_$old_release_version
	else
		conversion_file=/etc/parameter_conversion/conversion
	fi
	
	if [[ -f $conversion_file ]]; then
		i=1
		# Remove comments from conversion file
		while read action value1 value2 value3; do
			if [[ $action ]]; then
				echo_debug "Parameter='$value1', action='$action'"
				case $action in

				debug_on)
					# No parameter required
					DEBUG=/tmp/parameter_conversion.log
					echo_debug "Old configuration=$old_config"
					echo_debug "Conversion file=$conversion_file"
					;;

				duplicate_config)
					# No parameter required
					echo_debug "Duplicate config from $old_config to /"
					cp -R $old_config/* /
					;;

				copy_dir)
					# value1=directory to be copied
					# value2=new directory destination (optional)
					# value3=(not used)
					if [[ "$value1" ]]; then
						if [[ -d $old_config/$value1 ]]; then
							if [[ ! -d $(dirname $value1) ]]; then
								mkdir $(dirname $value1)
							fi
							cp -R $old_config/$value1 $(dirname $value1)
						else
							echo_debug "copy_dir: '$old_config/$value1' is not a directory"
						fi
					else
						echo_debug "copy_dir: Error, expected at least 1 parameter (line $i)"
					fi
					;;

				copy_file)
					# value1=file to be copied
					# value2=new directory (optional)
					# value3=new filename (optional)
					if [[ "$value1" ]]; then
						if [[ -f $old_config/$value1 ]]; then
							if [[ "$value2" ]]; then
								if [[ ! -d $value2 ]]; then
									echo_debug "copy_file: Creating directory '$value2'"
									mkdir -p $value2
								fi
								if [[ "$value3" ]]; then
									new_file=$value2/$value3
								else
									new_file=$value2/$(basename $value1)
								fi
								cp $old_config/$value1 $new_file
								if [[ $? -ne 0 ]]; then
									echo_debug "copy_file: Couldn't copy '$old_config/$value1' to '$new_dir'"
								fi
							else
								cp $old_config/$value1 $(dirname $value1)
								if [[ $? -ne 0 ]]; then
									echo_debug "copy_file: Couldn't copy '$old_config/$value1' to '$(dirname $value1)'"
								fi
							fi
						else
							echo_debug "copy_file: Couldn't find file '$value1' in $old_config"
						fi
					else
						echo_debug "copy_file: Error, expected at least 1 parameter (line $i)"
					fi
					;;

				uci_set)
					# value1=parameter to be copied
					# value2=new parameter name (optional)
					# value3=(not used)
					convcmds uci_set $value1 $value2
					if [ $? -ne 0 ]; then
						echo_debug "uci_set: error at line $i"
					fi
					;;

				uci_section)
					# value1=section name
					# value2=UCI filename (absolute path)
					# value3=(not used)
					convcmds uci_section $value1 $value2
					if [ $? -ne 0 ]; then
						echo_debug "uci_section: error at line $i"
					fi
					;;

				uci_list)
					# value1=list parameter to be copied
					# value2=new list name (optional)
					# value3=(not used)
					convcmds uci_list $value1 $value2
					if [ $? -ne 0 ]; then
						echo_debug "uci_list: error at line $i"
					fi
					;;

				uci_del )
					#value1=section/option to drop
					#value2=(not used)
					#value3=(not used)
					convcmds uci_del $value1
					if [ $? -ne 0 ]; then
						echo_debug "uci_del: error at line $i"
					fi
					;;

				copy_web_users )
					# no parameters
					convcmds copy_web_users
					if [ $? -ne 0 ]; then
						echo_debug "copy_web_users: error at line $i"
					fi
					;;

				inline_sh_cmd)
					# value1=shell command
					# value2=shell command (continued)
					# value3=shell command (continued)
					if [[ "$value1" ]]; then
						run=$(echo "$value1 $value2 $value3" | sed "s|%%OLDCONFIG%%|$old_config|g")
						echo_debug "inline_sh_cmd: Running '$run'"
						if [ -z $DEBUG ]; then
							sh -c "$run"
						else
							sh -c "$run" >>$DEBUG
						fi
					else
						echo_debug "inline_sh_cmd: Error, expected at least 1 parameter (line $i)"
					fi
					;;

				*)
					echo_debug "Unknow action '$action' in file $conversion_file in line $i"
				esac
				let i++
			fi
		done < $conversion_file
	else
		echo_debug "Conversion file '$conversion_file' not found"
	fi

	mount | grep -q "tmpfs on /overlay/homeware_conversion type tmpfs" && umount /overlay/homeware_conversion
	rm -rf /overlay/homeware_conversion
fi


