#NG-71142; NG-80959; NG-106403

#!/bin/sh

#init env
wireless_init_uci_env.sh

#Calculate TI SSID Postfix out of Wirelss MAC-Address as on Jira: NG-47046
#wireless_postfix_TI.sh for now this is devitation from custo as received from CTS
#instead of having another script merged it here itself
#get mac adress
macadress=`uci get env.rip.wifi_mac`

#Example mac=C4:EA:1D:59:43:76 --> mac=C4:EA:d:c:b:a
#we save the two last digits of the mac in a and so on for b,c and d
a=`echo $macadress | awk '{print substr($macadress, 16,2)}'`
b=`echo $macadress | awk '{print substr($macadress, 13,2)}'`
c=`echo $macadress | awk '{print substr($macadress, 10,2)}'`
d=`echo $macadress | awk '{print substr($macadress, 7,2)}'`

#the 0x and than our variables compiles from hex to dec 0xf --> 15
#(0x$b << 8) this means our compiled hex to dec number will be shift left for 8 bits
decimal_ssid=$((0x$a | (0x$b << 8) | (0x$c << 16) | ( (0x$d & 15) << 24 ) ))
#$(($decimal_ssid%100000000)) --> we want only a 8 digits number so we use modulo
#printf "%.8d " $(($decimal_ssid%100000000)) --> and all together we want everytime that the number is 8 digits long, if it only 7 digits we need a 0 at the 
#beginning of our decimal number
decimal_ssid=`printf "%.8d " $(($decimal_ssid%100000000))`
uci set env.var.ssid_mac_postfix_r0=$decimal_ssid

# Define the Custo Specific SSID-Prefix
uci set env.var.ssid_prefix='TIM-'
uci commit env

board=`uci get env.rip.board_mnemonic`

# Modify Common  settings depending on used board for Radio 5GHz
uci set wireless.radio_2G.channelwidth='auto'
uci set wireless.radio_2G.acs_rescan_period='86400'
uci set acs_channel_monitor_period='5'

# Modify Common  settings depending on used board for Radio 5GHz
uci set wireless.radio_5G.channelwidth='auto'

if [ $board == "VANT-6" ]; then
	uci set wireless.radio_5G.acs_rescan_period='86400'
	uci set wireless.radio_5G.cdd='on'
elif [ $board == "VBNT-K" ]; then
	uci set wireless.radio_5G.cdd '1'
elif [ $board == "VBNT-F" ]; then
	uci set wireless.radio_5G.cdd '1'
fi

#Disable MU-MIMO
uci set wireless.radio_5G.mumimo='0'

# Settings for Accesspoint parameters
uci set wireless.ap0.security_mode='wpa2-psk'
uci set wireless.ap1.security_mode='wpa2-psk'

#Update parameters

# To make sure it is set to the correct vendor
uci set wireless.radio_2G.type=`wireless_get_radio_type.sh radio_2G`
uci set wireless.wl0.ssid=`uci get env.var.ssid_prefix``uci get env.var.ssid_mac_postfix_r0`
uci set wireless.ap0.wep_key=`uci get env.var.default_wep_key_r0_s0`
uci set wireless.ap0.wpa_psk_key=`uci get env.var.default_key_r0_s0`
uci set wireless.ap0.wps_ap_pin=`uci get env.var.default_wps_ap_pin_r0_s0`
uci set wireless.ap0_auth0.secret=`uci get env.var.default_key_r0_s0`

#ACS as per TI last requirements on BHS Combo - not in specs
uci set wireless.radio_2G.acs_rescan_period='86400'
uci set wireless.radio_2G.acs_rescan_delay_policy='notraffic'
uci set wireless.radio_2G.acs_rescan_delay_max_events='999'
uci set wireless.radio_2G.acs_rescan_delay='180'


#/********************************************
# Settings for 2nd 2.4 GHz
#/********************************************
uci set wireless.wl0_1=wifi-iface
uci set wireless.wl0_1.device='radio_2G'
uci set wireless.wl0_1.mode='ap'
uci set wireless.wl0_1.state='0'
uci set wireless.wl0_1.network='wlnet_b_24'
uci set wireless.wl0_1.ssid='SET_BY_SCRIPT'
uci set wireless.wl0_1.reliable_multicast='0'

uci set wireless.ap2=wifi-ap
uci set wireless.ap2.iface='wl0_1'
uci set wireless.ap2.state='0'
uci set wireless.ap2.public='1'
uci set wireless.ap2.ap_isolation='1'
uci set wireless.ap2.station_history='1'
uci set wireless.ap2.max_assoc='0'
uci set wireless.ap2.security_mode='wpa2-psk'
uci set wireless.ap2.supported_security_modes='none wep wpa2-psk wpa-wpa2-psk'
uci set wireless.ap2.pmf='disabled'
uci set wireless.ap2.wep_key='SET_BY_SCRIPT'
uci set wireless.ap2.wpa_psk_key='SET_BY_SCRIPT'
uci set wireless.ap2.pmksa_cache='1'
uci set wireless.ap2.wps_state='0'
uci set wireless.ap2.wps_w7pbc='1'
uci set wireless.ap2.wsc_state='configured'
uci set wireless.ap2.wps_ap_setup_locked='1'
uci set wireless.ap2.wps_ap_pin='SET_BY_SCRIPT'
uci set wireless.ap2.acl_mode=disabled
uci set wireless.ap2.acl_registration_time='60'
uci set wireless.ap2.acl_accept_list=''
uci set wireless.ap2.acl_deny_list=''
uci set wireless.ap2.trace_modules=' '
uci set wireless.ap2.trace_level='some'

uci set wireless.ap2.display_connected_devices='1'

uci set wireless.ap2_auth0=wifi-radius-server
uci set wireless.ap2_auth0.state='0'
uci set wireless.ap2_auth0.port='1812'
uci set wireless.ap2_auth0.priority='3'
uci set wireless.ap2_auth0.secret='SET_BY_SCRIPT'

uci set wireless.ap2_acct0=wifi-radius-server
uci set wireless.ap2_acct0.state='0'
uci set wireless.ap2_acct0.port='1813'
uci set wireless.ap2_acct0.priority='3'
uci set wireless.ap2_acct0.supported_security_modes='none wpa2-psk wpa-wpa2-psk'

uci set wireless.wl0_1.ssid=Ospiti-TIM-`uci get env.var.ssid_mac_postfix_r0`
uci set wireless.ap2.wep_key=`uci get env.var.default_wep_key_r0_s1`
uci set wireless.ap2.wpa_psk_key=`uci get env.var.default_key_r0_s1`
uci set wireless.ap2.wps_ap_pin=`uci get env.var.default_wps_ap_pin_r0_s1`
uci set wireless.ap2_auth0.secret=`uci get env.var.default_key_r0_s1`

uci set network.wlnet_b_24.name=`uci get wireless.wl0_1.ssid`

# Is there a dual radio config ?
DUMMY=`uci get wireless.radio_5G`

if [ "$?" == "0" ] ; then
  uci set wireless.radio_5G.type=`wireless_get_radio_type.sh radio_5G`
  
  uci set wireless.wl1.ssid=`uci get env.var.ssid_prefix``uci get env.var.ssid_mac_postfix_r0`
  
  uci set wireless.ap1.wep_key=`uci get env.var.default_wep_key_r0_s0`
  
  uci set wireless.ap1.wpa_psk_key=`uci get env.var.default_key_r0_s0`
  
  uci set wireless.ap1.wps_ap_pin=`uci get env.var.default_wps_ap_pin_r0_s0`
  
  uci set wireless.ap1_auth0.secret=`uci get env.var.default_key_r0_s0`

#/********************************************
# Settings for 2nd 5 GHz
#/********************************************

uci set wireless.wl1_1=wifi-iface		
uci set wireless.wl1_1.device='radio_5G'
uci set wireless.wl1_1.mode='ap'
uci set wireless.wl1_1.state='0'
uci set wireless.wl1_1.vlan_id='3'
uci set wireless.wl1_1.network='wlnet_b_5'
uci set wireless.wl1_1.ssid='SET_BY_SCRIPT'
uci set wireless.wl1_1.reliable_multicast='0'
	 
uci set wireless.ap3=wifi-ap
uci set wireless.ap3.iface='wl1_1'
uci set wireless.ap3.state='0'
uci set wireless.ap3.public='1'
uci set wireless.ap3.ap_isolation='1'
uci set wireless.ap3.station_history='1'
uci set wireless.ap3.max_assoc='0'
uci set wireless.ap3.security_mode='wpa2-psk'
uci set wireless.ap3.supported_security_modes='none wpa2-psk wpa-wpa2-psk'
uci set wireless.ap3.pmf='disabled'
uci set wireless.ap3.wep_key='SET_BY_SCRIPT'
uci set wireless.ap3.wpa_psk_key='SET_BY_SCRIPT'
uci set wireless.ap3.pmksa_cache='1'
uci set wireless.ap3.wps_state='0'
uci set wireless.ap3.wps_w7pbc='1'
uci set wireless.ap3.wsc_state='configured'
uci set wireless.ap3.wps_ap_setup_locked='1'
uci set wireless.ap3.wps_ap_pin='SET_BY_SCRIPT'
uci set wireless.ap3.acl_mode=disabled
uci set wireless.ap3.acl_registration_time='60'
uci set wireless.ap3.acl_accept_list=''
uci set wireless.ap3.acl_deny_list=''
uci set wireless.ap3.trace_modules=' '
uci set wireless.ap3.trace_level='some'

uci set wireless.ap3.display_connected_devices='1'


uci set wireless.wl1_1.ssid=Ospiti-TIM-`uci get env.var.ssid_mac_postfix_r0`
uci set wireless.ap3.wep_key=`uci get env.var.default_wep_key_r0_s1`
uci set wireless.ap3.wpa_psk_key=`uci get env.var.default_key_r0_s1`
uci set wireless.ap3.wps_ap_pin=`uci get env.var.default_wps_ap_pin_r0_s1`
uci set wireless.ap3_auth0.secret=`uci get env.var.default_key_r0_s1`

uci set network.wlnet_b_5.name=`uci get wireless.wl1_1.ssid`

fi

uci set wireless.global.wfa_model_name="AGHP"   		#added NG-71142
uci set wireless.global.wfa_friendly_name="Modem TIM"	#added NG-71142

rm /tmp/hostapd.env #added NG-82222 as workaround 

uci commit network
uci commit wireless

#/*******************************************************************/
#/*             datamodel ordering for wireless devices             */
#/*******************************************************************/
uci show dmordering >/dev/null 2>/dev/null || touch /etc/config/dmordering
uci set dmordering.wlandevices=ordering
uci set dmordering.wlandevices.name='InternetGatewayDevice.WLANDevices.{i}.'
# devices that are instantiated under `InternetGatewayDevice.LANDevice`:
uci add_list dmordering.wlandevices.order=wl0
uci add_list dmordering.wlandevices.order=wl1_remote
uci commit dmordering

