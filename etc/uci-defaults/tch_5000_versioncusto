#!/bin/sh

********************************************************************
*		Modifiing the SW version to the values required by Customer
*********************************************************************
board=`uci get env.var.hardware_version`


if [ $board == "VBNT-K" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTEF_'
	transl="TI_versions"
elif [ $board == "VBNT-K_SFP" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHP_'
	transl="TI_versions_SFP"
elif [ $board == "VBNT-S" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHP_'
	transl="TI_versions_SFP"
elif [ $board == "VCNT-D" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTSA_'
        transl="TI_versions"
elif [ $board == "VCNT-3" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHF_'
        transl="TI_versions"
elif [ $board == "GCNT-N" ]; then
	uci set versioncusto.override.fwversion_prefix='RPTEM_'
        transl="TI_versions"
fi


#this will only be used during development/customization and will be removed normally together with closing the build
#uci set versioncusto.override.fwversion_suffix='ti_open file 16.3.7187-2789001'


#firmware versions conversion table : homeware version -> TI version
#Add new entries in the 'here-document' below (before the EOTX ending line)
#leave the last line : 'Unknown' if no matching version
#top-down precedence order : if actual version does not match first field of first line, try next line
TI_versions(){
cat <<EOTXT
19.4.0449-4869009 1.0.0_001
19.4.0449-4861009 1.0.0_001
19.4.0449-4869013 1.0.0_001
19.4.0449-4861013 1.0.0_001
19.4.0449-4869014 1.0.0_001_DUMMY
19.4.0449-4861014 1.0.0_001_DUMMY
19.4.0512-4869004 1.0.0_002
19.4.0512-4861004 1.0.0_002
19.4.0512-4869009 1.0.0_002
19.4.0512-4861009 1.0.0_002
19.4.0512-4869010 1.0.0_002_DUMMY
19.4.0512-4861010 1.0.0_002_DUMMY
19.4.0551-4869020 1.0.0_003
19.4.0551-4861020 1.0.0_003
19.4.0551-4869053 1.0.0_003
19.4.0551-4861053 1.0.0_003
19.4.0551-4869054 1.0.0_003_DUMMY
19.4.0551-4861054 1.0.0_003_DUMMY
19.4.0551-4869057 1.0.0
19.4.0551-4861057 1.0.0
19.4.0551-4869058 1.0.0
19.4.0551-4861058 1.0.0
19.4.0551-4869059 1.0.0_DUMMY
19.4.0551-4861059 1.0.0_DUMMY
19.4.0551-4869057 1.0.0
19.4.0551-4861057 1.0.0
19.4.0551-4869058 1.0.0
19.4.0551-4861058 1.0.0
19.4.0551-4869059 1.0.0_DUMMY
19.4.0551-4861059 1.0.0_DUMMY
19.4.0615-4869001 1.0.1_001
19.4.0615-4861001 1.0.1_001
19.4.0615-4869002 1.0.1_001
19.4.0615-4861002 1.0.1_001
19.4.0615-4869003 1.0.1_001_DUMMY
19.4.0615-4861003 1.0.1_001_DUMMY
19.4.0649-5829011 1.0.1_002
19.4.0649-5821011 1.0.1_002
19.4.0649-5829012 1.0.1_002
19.4.0649-5821012 1.0.1_002
19.4.0649-5829013 1.0.1_002_DUMMY
19.4.0649-5821013 1.0.1_002_DUMMY
19.4.0649-5829018 1.0.1
19.4.0649-5821018 1.0.1
19.4.0649-5829019 1.0.1
19.4.0649-5821019 1.0.1
19.4.0649-5829020 1.0.1_DUMMY
19.4.0649-5821020 1.0.1_DUMMY
19.4.0677-5829016 1.0.2
19.4.0677-5821016 1.0.2
19.4.0677-5829018 1.0.2
19.4.0677-5821018 1.0.2
19.4.0677-5829019 1.0.2_DUMMY
19.4.0677-5821019 1.0.2_DUMMY
19.4.0677-5829021 1.0.3
19.4.0677-5821021 1.0.3
19.4.0677-5829022 1.0.3
19.4.0677-5821022 1.0.3
19.4.0677-5829023 1.0.3_DUMMY
19.4.0677-5821023 1.0.3_DUMMY
19.4.0677-5829024 1.0.4
19.4.0677-5821024 1.0.4
19.4.0677-5829025 1.0.4
19.4.0677-5821025 1.0.4
19.4.0677-5829026 1.0.4_DUMMY
19.4.0677-5821026 1.0.4_DUMMY
.*	1.99.99.99
EOTXT
}



#perform a translation (table based in this example : output 2nd field of matching version entry in PXS_versions table above)
#input params:
#   none
TI_translate_swversions(){
	if [ "$transl" != "" ]; then
		tver=$($transl | awk -v srch="$(uci get env.var.friendly_sw_version_activebank)" 'srch ~ $1 {print $2}' | head -1)
		uci set env.var.friendly_sw_version_activebank=`uci get versioncusto.override.fwversion_prefix`"$tver"
		uci set versioncusto.override.fwversion_override="$tver"
#Populate user-agent
#user-agent format for TI: vendorname / <HWversion>/ <FWversion> / <SWversion>
		uci set mmpbxrvsipnet.sip_net.user_agent="$(uci get env.var.company_name) / $(uci get env.var.hardware_version) / `uci get versioncusto.override.fwversion_prefix`"$tver" / `uci get versioncusto.override.fwversion_prefix`"$tver""
		uci commit mmpbxrvsipnet

		tver=$($transl | awk -v srch="$(uci get env.var.friendly_sw_version_passivebank)" 'srch ~ $1 {print $2}' | head -1)
		uci set env.var.friendly_sw_version_passivebank=`uci get versioncusto.override.fwversion_prefix`"$tver"
#if no conversion needed : comment previous 3 lines
		uci commit env
	fi
}



TI_translate_swversions



SW_Version=`lua -e "t=require'transformer.shared.banktable' value=t.getCurrentVersion() print(string.match(value,'([^%-]+)%-'))"`

#this will only be used during development/customization and will be removed normally together with closing the build
#uci set versioncusto.override.fwversion_suffix='_Custo005'


uci commit versioncusto

