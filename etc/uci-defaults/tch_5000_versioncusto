#!/bin/sh

********************************************************************
*		Modifiing the SW version to the values required by Customer
*********************************************************************
board=`uci get env.var.hardware_version`


if [ $board == "VBNT-K" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTEF_'
	transl="TI_versions"
elif [ $board == "VBNT-K_SFP" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHP_'
	transl="TI_versions_SFP"
elif [ $board == "VBNT-S" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHP_'
	transl="TI_versions_SFP"
elif [ $board == "VCNT-D" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTSA_'
        transl="TI_versions"
elif [ $board == "VCNT-3" ]; then
	uci set versioncusto.override.fwversion_prefix='AGTHF_'
        transl="TI_versions"
fi


#this will only be used during development/customization and will be removed normally together with closing the build
#uci set versioncusto.override.fwversion_suffix='ti_open file 16.3.7187-2789001'


#firmware versions conversion table : homeware version -> TI version
#Add new entries in the 'here-document' below (before the EOTX ending line)
#leave the last line : 'Unknown' if no matching version
#top-down precedence order : if actual version does not match first field of first line, try next line
TI_versions(){
cat <<EOTXT
19.4.0251-4669001 1.0.0_001
19.4.0251-4661001 1.0.0_001
19.4.0251-4669002 1.0.0_001
19.4.0251-4661002 1.0.0_001
19.4.0251-4669003 1.0.0_001_DUMMY
19.4.0251-4661003 1.0.0_001_DUMMY
19.4.0285-4669001 1.0.0_002
19.4.0285-4661001 1.0.0_002
19.4.0285-4669002 1.0.0_002
19.4.0285-4661002 1.0.0_002
19.4.0285-4669003 1.0.0_002_DUMMY
19.4.0285-4661003 1.0.0_002_DUMMY
19.4.0306-4669002 1.0.0_003
19.4.0306-4661002 1.0.0_003
19.4.0306-4669003 1.0.0_003
19.4.0306-4661003 1.0.0_003
19.4.0306-4669004 1.0.0_003_DUMMY
19.4.0306-4661004 1.0.0_003_DUMMY
19.4.0335-4669001 1.0.0_004
19.4.0335-4661001 1.0.0_004
19.4.0335-4669002 1.0.0_004
19.4.0335-4661002 1.0.0_004
19.4.0335-4669003 1.0.0_004_DUMMY
19.4.0335-4661003 1.0.0_004_DUMMY
19.4.0351-4669001 1.0.0_005
19.4.0351-4661001 1.0.0_005
19.4.0351-4669002 1.0.0_005
19.4.0351-4661002 1.0.0_005
19.4.0351-4669003 1.0.0_005_DUMMY
19.4.0351-4661003 1.0.0_005_DUMMY
19.4.0351-4669020 1.0.0
19.4.0351-4661020 1.0.0
19.4.0351-4669021 1.0.0
19.4.0351-4661021 1.0.0
19.4.0351-4669022 1.0.0_DUMMY
19.4.0351-4661022 1.0.0_DUMMY
19.4.0393-4669001 1.0.1_001
19.4.0393-4661001 1.0.1_001
19.4.0393-4669002 1.0.1_001
19.4.0393-4661002 1.0.1_001
19.4.0393-4669003 1.0.1_001_DUMMY
19.4.0393-4661003 1.0.1_001_DUMMY
19.4.0421-4669012 1.0.1_002
19.4.0421-4661012 1.0.1_002
19.4.0421-4669002 1.0.1_002
19.4.0421-4661002 1.0.1_002
19.4.0421-4669003 1.0.1_002_DUMMY
19.4.0421-4661003 1.0.1_002_DUMMY
19.4.0421-4669013 1.0.1
19.4.0421-4661013 1.0.1
19.4.0421-4669014 1.0.1
19.4.0421-4661014 1.0.1
19.4.0421-4669015 1.0.1_DUMMY
19.4.0421-4661015 1.0.1_DUMMY
19.4.0512-4669003 1.0.2_001
19.4.0512-4661003 1.0.2_001
19.4.0512-4669007 1.0.2_001
19.4.0512-4661007 1.0.2_001
19.4.0512-4669008 1.0.2_001_DUMMY
19.4.0512-4661008 1.0.2_001_DUMMY
19.4.0539-4669005 1.0.2_002
19.4.0539-4661005 1.0.2_002
19.4.0539-4669006 1.0.2_002
19.4.0539-4661006 1.0.2_002
19.4.0539-4669007 1.0.2_002_DUMMY
19.4.0539-4661007 1.0.2_002_DUMMY
19.4.0539-4669032 1.0.2
19.4.0539-4661032 1.0.2
19.4.0539-4669033 1.0.2
19.4.0539-4661033 1.0.2
19.4.0539-4669034 1.0.2_DUMMY
19.4.0539-4661034 1.0.2_DUMMY
19.4.0551-4669019 1.0.3_001
19.4.0551-4661019 1.0.3_001
19.4.0551-4669051 1.0.3_001
19.4.0551-4661051 1.0.3_001
19.4.0551-4669052 1.0.3_001_DUMMY
19.4.0551-4661052 1.0.3_001_DUMMY
.*	1.99.99.99
EOTXT
}



#perform a translation (table based in this example : output 2nd field of matching version entry in PXS_versions table above)
#input params:
#   none
TI_translate_swversions(){
	if [ "$transl" != "" ]; then
		tver=$($transl | awk -v srch="$(uci get env.var.friendly_sw_version_activebank)" 'srch ~ $1 {print $2}' | head -1)
		uci set env.var.friendly_sw_version_activebank=`uci get versioncusto.override.fwversion_prefix`"$tver"
		uci set versioncusto.override.fwversion_override="$tver"
#Populate user-agent
#user-agent format for TI: vendorname / <HWversion>/ <FWversion> / <SWversion>
		uci set mmpbxrvsipnet.sip_net.user_agent="$(uci get env.var.company_name) / $(uci get env.var.hardware_version) / `uci get versioncusto.override.fwversion_prefix`"$tver" / `uci get versioncusto.override.fwversion_prefix`"$tver""
		uci commit mmpbxrvsipnet

		tver=$($transl | awk -v srch="$(uci get env.var.friendly_sw_version_passivebank)" 'srch ~ $1 {print $2}' | head -1)
		uci set env.var.friendly_sw_version_passivebank=`uci get versioncusto.override.fwversion_prefix`"$tver"
#if no conversion needed : comment previous 3 lines
		uci commit env
	fi
}



TI_translate_swversions



SW_Version=`lua -e "t=require'transformer.shared.banktable' value=t.getCurrentVersion() print(string.match(value,'([^%-]+)%-'))"`

#this will only be used during development/customization and will be removed normally together with closing the build
#uci set versioncusto.override.fwversion_suffix='_Custo005'


uci commit versioncusto

