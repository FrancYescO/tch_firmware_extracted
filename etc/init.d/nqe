#!/bin/sh /etc/rc.common
# Copyright (C) 2008-2011 OpenWrt.org

#********** COPYRIGHT AND CONFIDENTIALITY INFORMATION NOTICE *************
#** Copyright (c) 2014 - Technicolor Delivery Technologies, SAS         **
#** All Rights Reserved                                                 **

START=60
STOP=35
SERVICE_DAEMONIZE=1
USE_PROCD=1

. $IPKG_INSTROOT/lib/functions/contentsharing.sh

start_service() {
        ln -sf /etc/init.d/nqe /etc/init.d/samba

        local sambaEnabled
        config_load samba
        config_get_bool sambaEnabled samba enabled '0'
        echo "sambaEnabled:$sambaEnabled"

        [ "$sambaEnabled" -eq 0 ] && return 1

        # call a contentsharing function to set 'available' to yes or no for each of the shares depending on the value of samba.samba.filesharing
        cs_update_sharesconfig

        #removing nqe_nqnd_ready file created by nddaemon process previosly 
        rm -rf /tmp/nqe_nqnd_ready


       procd_open_instance
       procd_set_param command /usr/bin/nqnd
       procd_set_param respawn
       procd_close_instance


       procd_open_instance
       procd_set_param command /usr/bin/nqcs
       procd_set_param respawn 3600 5 0
       procd_close_instance

}
reload_service() {
local filesharing_enabled=$(uci get samba.samba.filesharing)

local sambashare=$(transformer-cli get uci.samba.sambashare. | grep name)

if [ $filesharing_enabled == 0 ] ; then
  echo "$sambashare" | while read line
  do
    local share_name_path=$(echo "$line" | cut -d' ' -f1)
    local share_name=$(transformer-cli get $share_name_path | cut -d' ' -f4)

    local share_present=$(/usr/bin/nqcsctrl ES | grep -c $share_name)

    if [ $share_present != 0 ] ; then
      /usr/bin/nqcsctrl -S $share_name
    fi
  done
elif [ $filesharing_enabled == 1 ] ; then
  echo "$sambashare" | while read line
  do
    local share_name_path=$(echo "$line" | cut -d' ' -f1)
    local share_name=$(transformer-cli get $share_name_path | cut -d' ' -f4)
    local share_path_path=${share_name_path/name/path}
    local share_path=$(transformer-cli get $share_path_path | cut -d' ' -f4)

    local share_present=$(/usr/bin/nqcsctrl ES | grep -c $share_name)

    if [[ $share_present == 0 && $share_path != "/var/spool/samba" ]] ; then
      /usr/bin/nqcsctrl +S $share_name $share_path $share_name
    fi
  done
fi

local printersharing_enabled=$(uci get printersharing.config.enabled)

local sambashare_printerpath=$(uci show samba | grep /var/spool/samba)
local sambashare_printerPath=$(echo $sambashare_printerpath | cut -d'=' -f1)
local sambashare_printer_path=${sambashare_printerPath/path/enabled}
local sambashare_printer_enabled=$(uci get $sambashare_printer_path)

local printershare=$(transformer-cli get uci.printersharing. | grep name)

if [[ $sambashare_printer_enabled == 1 && $printersharing_enabled == 0 ]] ; then
  echo "$printershare" | while read line
  do
    local share_name_path=$(echo "$line" | cut -d' ' -f1)
    local share_name=$(transformer-cli get $share_name_path | cut -d' ' -f4)

    local share_present=$(/usr/bin/nqcsctrl ES | grep -c $share_name)

    if [ $share_present != 0 ] ; then
      /usr/bin/nqcsctrl -S $share_name
    fi
  done
elif [[ $sambashare_printer_enabled == 1 && $printersharing_enabled == 1 ]] ; then
  echo "$printershare" | while read line
  do
    local share_name_path=$(echo "$line" | cut -d' ' -f1)
    local share_name=$(transformer-cli get $share_name_path | cut -d' ' -f4)
    local share_path_path=${share_name_path/name/path}
    local share_path=$(transformer-cli get $share_path_path | cut -d' ' -f4)

    local share_present=$(/usr/bin/nqcsctrl ES | grep -c $share_name)

    if [ $share_present == 0 ] ; then
      /usr/bin/nqcsctrl +S $share_name $share_path $share_name
    fi
  done
fi
}
