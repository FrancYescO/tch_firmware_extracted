#!/bin/sh /etc/rc.common

START=90
STOP=10
USE_PROCD=1

. $IPKG_INSTROOT/lib/functions/network.sh

list_device() {
  local device
  network_get_device device $1
  append DEVICES ${device}
}

validate_config() {
  uci_validate_section fhcd fhcd fhcd \
    'enable:bool:0' \
    'tls_cert:file' \
    'tls_key:or(file,regex("engine\:.*"))' \
    'tls_castore:directory' \
    'interface:list(string)' \
    'loglevel:range(0, 7)'
}

start_service() {
  local enable tls_cert tls_key tls_castore interface loglevel
  local required="tls_cert tls_key tls_castore interface"
  local configOK=1
  local paramvalue

  validate_config || {
    echo "invalid UCI configuration"
    exit 1
  }

  [ $enable -eq 0 ] && exit 0
  for param in $required; do
    eval paramvalue=\$$param
    [ -z "$paramvalue" ] && {
      echo "$param is required"
      configOK=0
    }
  done
  [ $configOK -eq 1 ] || exit 1

  for intf in $interface; do
    list_device $intf
  done

  procd_open_instance fhcd
  procd_set_param command /usr/bin/fhcd -i $DEVICES
  [ -n "$loglevel" ] && procd_append_param command -l "$loglevel"
  procd_set_param respawn
  procd_set_param env FHCD_TLS_KEY=$tls_key
  procd_append_param env FHCD_TLS_CERT=$tls_cert
  procd_append_param env FHCD_TLS_CASTORE=$tls_castore
  procd_close_instance
}

reload_service() {
  restart
}
