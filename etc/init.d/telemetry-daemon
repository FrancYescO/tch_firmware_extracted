#!/bin/sh /etc/rc.common
# (C) NETDUMA Software 2020



START=99
PROG=/usr/bin/telemetry-daemon

define_dumaos_env_variables() {
  export MODEL="$(cat /dumaossystem/model 2>/dev/null)"
}

# Use procd if available otherwise revert to old method
if type procd > /dev/null; then 
  USE_PROCD=1
else
  SERVICE_DAEMONIZE=1
  SERVICE_WRITE_PID=1
fi

define_dumaos_env_variables

start_service() {
  interface=$(ifstatus lan | jsonfilter -e '@.l3_device')

  #-- @depends test
  #-- @test test 1
  if [ -z "$interface" ]; then
    #-- @depends logger; arpwatch
    #-- @test which logger && which arpwatch
    logger -t telemetry-daemon -p 3 -s "Couldn't get LAN interface name."
  fi

  #-- @depends cat
  #-- @test which cat
  address=$(cat /sys/class/net/${interface}/address)

  #-- @depends test
  #-- @test test 1
  if [ -z "$address" ]; then
    #-- @depends logger; arpwatch
    #-- @test which logger && which arpwatch
    logger -t telemetry-daemon -p 3 -s "Couldn't get interface MAC Address."
  fi
  
  #-- To get information about the parameters provided, try running "telemetry-daemon -h"
  procd_open_instance
  procd_set_param command "$PROG"
  procd_append_param command -a "$address"
  if [ "$MODEL" = "R2" ];then
    procd_append_param command -X "/_doc/"
  fi

  if [ "$MODEL" = "DJA0231" -o "$MODEL" = "DJA0230" -o "$MODEL" = "LH1000" ];then
    mirror="$(uci get dumaos.telemetry.url)"
    username="$(uci get dumaos.telemetry.username)"
    password="$(uci get dumaos.telemetry.password)"
    procd_append_param command -x "/game-optimiser/telemetry"
    procd_append_param command -s "/v2/oauth/token"
    procd_append_param command -d "/www/json/telstra-telemetry.json"
    procd_append_param command -o
    procd_append_param command -n
    procd_append_param command -m "$mirror"
    procd_append_param command -u "$username"
    procd_append_param command -l "$password"
  fi

  procd_set_param respawn # respawn on crash
  if [ "$(cat /dumaossystem/model)" = "R2" ];then                                                                                  
          #Set core files size to unlimited                                                                                        
        procd_set_param limits core="unlimited"  # Set ulimit core files blocks                                                    
        sysctl -w "kernel.core_pattern=/tmp/%e.%p.%s.%t.core"                                                                      
        if [ ! -e "/.init_enable_core"  ];then                                                                                     
                touch /.init_enable_core                                                                                           
                sync                                                                                                               
        fi                                                                                                                         
  fi   
  procd_set_param stdout 0 # forward stdout of the command to logd
  procd_set_param stderr 1 # same for stderr

  # jail it - notice it needs no mount points as no files read/written
  procd_add_jail telemetry-daemon ubus log                                                   
  procd_close_instance
}

reload_service() {
  # We are always restarting the daemon on reload
  restart
  ubus call com.netdumasoftware.telemetry update_cron_frequencies
}


# procd not available
start() {
  #-- @depends cat
  #-- @test which cat
  address=$(cat /sys/class/net/br0/address)
  if [ "$MODEL" = "R2" ];then
    service_start $PROG -a "$address" -X "/_doc/"
  fi
  if [ "$MODEL" = "DJA0231" -o "$MODEL" = "DJA0230" -o "$MODEL" = "LH1000" ];then
    mirror="$(uci get dumaos.telemetry.url)"
    username="$(uci get dumaos.telemetry.username)"
    password="$(uci get dumaos.telemetry.password)"
    service_start $PROG -a "$address" -x "/game-optimiser/telemetry" -s "/v2/oauth/token" -d "/www/json/telstra-telemetry.json" -m "$mirror" -u "$username" -l "$password" -n -o
  fi
}

stop() {
  service_stop $PROG
}

reload() {
  stop
  start
  ubus call com.netdumasoftware.telemetry update_cron_frequencies
}