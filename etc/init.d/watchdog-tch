#!/bin/sh /etc/rc.common

START=10
STOP=00
USE_PROCD=1


CONFIGFILE="/var/etc/watchdog.conf"

append_parm() {
	local section="$1"
	local option="$2"
	local config="$3"
	local _loctmp
	config_get _loctmp "$section" "$option"
	[ -z "$_loctmp" ] && return 0
	echo "$config=$_loctmp" >> $CONFIGFILE
}

pidfile() {
	echo "pidfile=$1" >> $CONFIGFILE
	touch $1
}

ping() {
	echo "ping=$1" >> $CONFIGFILE
}

interface() {
	local phys_device
	network_get_physdev phys_device $1
	echo "interface=${phys_device}"  >> $CONFIGFILE
}

watchdog() {
	local cfg="$1"
	local admin
	append_parm "$cfg" interval "interval"
	append_parm "$cfg" logtick "logtick"
	append_parm "$cfg" load1 "max-load-1"
	append_parm "$cfg" load5 "max-load-5"
	append_parm "$cfg" load15 "max-load-15"
	append_parm "$cfg" repair_binary "repair-binary"
	append_parm "$cfg" repair_timeout "repair-timeout"
	append_parm "$cfg" test_directory "test-directory"
	append_parm "$cfg" test_binary "test-binary"
	append_parm "$cfg" test_timeout "test-timeout"
	append_parm "$cfg" mem_pages "min-memory"
	append_parm "$cfg" temperature "max-temperature"
	append_parm "$cfg" temperature_device "temperature-device"
	append_parm "$cfg" admin "admin"

	config_get log_dir "$cfg" log_dir "/tmp"
	echo "log-dir=${log_dir}" >> $CONFIGFILE

	config_get_bool debug "$cfg" debug 0
	[ ${debug} -eq 1 ] && append args "-q"

	config_list_foreach "$cfg" "pidfile" pidfile
	config_list_foreach "$cfg" "ping" ping
	config_list_foreach "$cfg" "interface" interface

	# the watchdog functionality moved mostly to procd
	config_get wd_int "$cfg" "interval"
	config_get wd_timeout "$cfg" "timeout"

	json_init
	[ -n "$wd_int"      ] && json_add_int frequency "${wd_int}"
	[ -n "$wd_timeout"  ] && json_add_int timeout "${wd_timeout}"
	json_close_object
	RES=$([ -n "$(json_dump)" ] && ubus call system watchdog "$(json_dump)")
	[ ${debug} -eq 1 ] && echo $RES

}

filewatch() {
	local cfg="$1"
	append_parm "$cfg" filename "file"
	append_parm "$cfg" change "change"
}

start_service() {
	include /lib/network
	. /lib/functions/network.sh

	scan_interfaces
	config_load watchdog

	# before we can call xappend
	mkdir -p $(dirname $CONFIGFILE)

	echo "# auto-generated config file from /etc/config/watchdog" > $CONFIGFILE
	echo "realtime=yes" >> $CONFIGFILE
	echo "priority=1" >> $CONFIGFILE
	echo "watchdog-device=none"  >> $CONFIGFILE

	config_foreach watchdog watchdog
	config_foreach filewatch filewatch

	procd_open_instance
	procd_set_param command /usr/sbin/watchdog-tch -c $CONFIGFILE --foreground  $args
	procd_set_param respawn 3600,60,0   # start max 60 sec, retry forever ,
	procd_close_instance
}

shutdown() {
	logger -t watchdog-tch "shutdown, stop this service"
	stop
	logger -t watchdog-tch "shutdown, then stop pinging the kernel watchdog"
	json_init
	json_add_int timeout '180'
	json_add_boolean stop '1'
	json_close_object
	RES=$([ -n "$(json_dump)" ] && ubus call system watchdog "$(json_dump)")
	logger -t watchdog-tch "ubus response ${RES}"
}

reload_service() {
	restart
}

service_triggers() {
	procd_add_reload_trigger watchdog
}
