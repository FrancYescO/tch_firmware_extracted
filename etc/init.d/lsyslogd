#!/bin/sh /etc/rc.common

# Must start up after syslogd service.
START=11
APP=luasyslog
PID_FILE=/var/run/$APP.pid
LOG_DIR="/root/log/"
LOG_TYPE=""
LOG_FILE=""
TMP_LOG_DIR="/tmp/log"
SYNC_BUFFER_FILE="luasyslog.sync"
BUFFER_FILE_DIR=`uci -q get system.buffer.logname`
BUFFER_FILE="$TMP_LOG_DIR/$BUFFER_FILE_DIR"

. $IPKG_INSTROOT/lib/functions.sh

log_cfg_handler() {
  local cfg="$1"
  config_get LOG_TYPE "$cfg" log_type circular
  config_get LOG_FILE "$cfg" log_file "/var/log/messages"
}

syncbuf() {
  local flag=`uci -q get system.buffer.size`
  if [ "$flag" != "" ] && [ "$flag" != "0" ]
  then
    touch "$TMP_LOG_DIR/$SYNC_BUFFER_FILE" && logger "sync log from buffer to file"
    while [[ -f "$TMP_LOG_DIR/$SYNC_BUFFER_FILE" ]]
    do
      sleep 1
    done
  fi
}

start() {
  [ -f "$PID_FILE" ] && echo "lsyslogd exist" && return
  config_load system
  config_foreach log_cfg_handler system
  [ -d "$LOG_DIR" ] || mkdir -p "$LOG_DIR"
  [ -d "$TMP_LOG_DIR" ] || mkdir -p "$TMP_LOG_DIR"
  if [ "$LOG_TYPE" = "file" ]; then
     LOG_CMD="tail -F -n +1 "$LOG_FILE""
  else
     LOG_CMD="logread -f"
  fi
  $LOG_CMD | $APP &
  log_cmd_pid=$(jobs -p)
  [ -n "$log_cmd_pid" ] && echo "$log_cmd_pid" > $PID_FILE
}

stop() {
  [ -f "$PID_FILE" ] && kill -9 `cat $PID_FILE` && rm -rf $PID_FILE
}

reload() {
  syncbuf
}
