#!/bin/sh /etc/rc.common
# (C) NETDUMA Software 2016
# ctwatch procd script


START=99
PROG=/usr/bin/ctwatch

# Enable conntrack accounting in case it is not already (e.g. LH1000)
echo "1" > /proc/sys/net/netfilter/nf_conntrack_acct || true

# Use procd if available otherwise revert to old method
if type procd > /dev/null; then 
  USE_PROCD=1
else
  SERVICE_DAEMONIZE=1
  SERVICE_WRITE_PID=1
fi

start_service(){
  
  procd_open_instance
  procd_set_param command "$PROG"
  procd_append_param command -d   # daemon mode
  if [ "$(cat /dumaossystem/model)" = "R2" ];then                                                                                  
          #Set core files size to unlimited                                                                                        
        procd_set_param limits core="unlimited"  # Set ulimit core files blocks                                                    
        sysctl -w "kernel.core_pattern=/tmp/%e.%p.%s.%t.core"                                                                      
        if [ ! -e "/.init_enable_core"  ];then                                                                                     
                touch /.init_enable_core                                                                                           
                sync                                                                                                               
        fi                                                                                                                         
  fi 
  #-- @depends test
  #-- @test test 1
  if [ ! -f /www/cgi-bin/uhttpd.sh ]; then
    procd_append_param command -c   # CGI only responds with status
  fi

  procd_set_param respawn # respawn on crash
  procd_set_param stdout 0 # forward stdout of the command to logd
  procd_set_param stderr 1 # same for stderr

  # jail it - notice it needs no mount points as no files read/written
  procd_add_jail ctwatch ubus log 
  procd_close_instance
}

# procd not available
start() {
  service_start $PROG -d
}

stop() {
  service_stop $PROG
}
