#!/usr/bin/env lua
local os = os
local uci = require("uci")
local proxy = require("datamodel")
local cursor = uci.cursor(nil, "/var/state")

local enabled = cursor:get("system", "scheduledreboot", "enabled")
cursor:close()

-- Check if scheduledreboot_enabled is on, only then we need to initiate the reboot.
-- If scheduledreboot_enabled is off, we just remove the cron job

if enabled == "1" then
  local rebootReason = proxy.get("uci.system.scheduledreboot.rebootreason")[1].value
  rebootReason = rebootReason == "" and "CLI" or rebootReason
  -- Initiate reboot with reason as 'CLI' by default or else reason can be specified in system.scheduledreboot.rebootreason
  proxy.set({ ["uci.system.scheduledreboot.enabled"] = "0",
    ["uci.system.scheduledreboot.time"] = "",
    ["uci.system.scheduledreboot.rebootreason"] = "",
    ["rpc.system.reboot"] = rebootReason })
  proxy.apply()
end

-- Remove cron job if scheduledreboot_enabled is off or reboot has been triggered
os.execute("crontab -c /etc/crontabs/ -l | grep -v '/usr/sbin/scheduledreboot' | crontab -c /etc/crontabs/ -")
