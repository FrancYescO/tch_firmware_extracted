#!/usr/bin/lua

local ubus, uloop = require('ubus'), require('uloop')
local json = require ("dkjson")

local function usage()
	print("usage: " .. arg[0] .. " <timeout> <event> <event data>")
	os.exit(1)
end

local function listen_timeout()
	os.exit(1)
end

if #arg < 2 then
	usage()
end

local timeout = tonumber(arg[1])
local event = arg[2]
local event_data
if arg[3] then
	event_data = json.decode (arg[3], 1, nil)
end

if not event or not timeout then
	usage()
end

uloop.init()
local conn = ubus.connect()
if not conn then
	print("Failed to connect to UBUS")
	return 1
end

local events = {}
events[event] = function(msg)
	local match = true
	if event_data then
		for k, v in pairs(event_data) do
			if msg[k] ~= v then
				match = false
			end
		end
	end
	if match then
		print(json.encode (msg, { indent = false }))
		os.exit(0)
	end
end

local timer = uloop.timer(listen_timeout)
timer:set(timeout*1000)
conn:listen(events)
uloop.run()
