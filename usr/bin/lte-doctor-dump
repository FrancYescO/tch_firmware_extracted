#!/usr/bin/lua

local sqlite3 = require ("lsqlite3")
local arg, print = arg, print

local usage = "Usage: lua "..arg[0].." [database filename]"
-- Main function --
if #arg ~= 1 then
	print(usage)
else
	local db, _, errMsg = sqlite3.open(arg[1])
	if not db then
		if errMsg then print(errMsg) end
		return 1
	end
	print("uptime;status;nas_state;rssi;rsrp;rsrq;snr;sinr;cinr;path_loss;ecio;phy_cell_id;dl_earfcn;radio_interface;mcc;mnc;description;cell_id;tracking_area_code;tx_power;lte_band;lte_dl_bandwidth;lte_ul_bandwidth;dl_arfcn;ul_arfcn;dl_earfcn;ul_earfcn;dl_uarfcn;ul_uarfcn;lte_dl_freq;lte_ul_freq;tx_kb;rx_kb;ri;cqi;radio_bearer_type")
	for a in db:nrows('SELECT uptime, status, nas_state, rssi, rsrp, rsrq, snr, cinr, path_loss, ecio, phy_cell_id, dl_earfcn, radio_interface, mnc, mcc, description, cell_id, tracking_area_code, tx_power, lte_band, lte_dl_bandwidth, lte_ul_bandwidth, dl_arfcn, ul_arfcn, dl_earfcn, ul_earfcn, dl_uarfcn, ul_uarfcn, lte_dl_freq, lte_ul_freq, tx_kb, rx_kb, ri, cqi, radio_bearer_type, location_area_code, service_state FROM log') do
		print(a.uptime..';'..a.status..';'..a.nas_state..';'..a.rssi..';'..a.rsrp..';'..a.rsrq..';'..a.snr..';'..a.sinr..';'..a.cinr..';'..a.path_loss..';'..a.ecio..';'..a.phy_cell_id..';'..a.dl_earfcn..';'..a.radio_interface..';'..a.mnc..';'..a.mcc..';'..a.description..';'..a.cell_id..';'..a.tracking_area_code..';'..a.tx_power..';'..a.lte_band..';'..a.lte_dl_bandwidth..';'..a.lte_ul_bandwidth..';'..a.dl_arfcn..';'..a.ul_arfcn..';'..a.dl_earfcn..';'..a.ul_earfcn..';'..a.dl_uarfcn..';'..a.ul_uarfcn..';'..a.lte_dl_freq..';'..a.lte_ul_freq..';'..a.tx_kb..';'..a.rx_kb..';'..a.ri..';'..a.cqi..';'..a.radio_bearer_type..';'..a.location_area_code..';'..a.service_state)
	end
end
