#!/usr/bin/env lua

--[[
  clash-iptables-wrapper is designed for the CLI's (clash) iptables and ip6tables command.
  It may be used from a root shell, but this is not its main purpose.

  Summary:
    The script calls `ip(6)tables` with the provided arguments, with one important exception:
       `-L all`
       As the other options, `-L` is also passed through as is, except when it is set with value `all`.
       Value `all` is stripped from the arguments, so that `ip(6)tables` is executed with plain `-L`.
       When `-L` is set to a chain name, `-L 'that_chain_name'` is simply passed to ip(6)tables.

  Background:
    Declaring the clash command with flag `-L (string default "")` is insufficient to get the arguments flow
    correctly from clash -> transformer -> ip(6)tables in all cases.

    Due to design, when `-L` is left empty, it never arrives at ip(6)tables, hence we would not be able to
    list all chains from ip(6)tables. The wrapper script covers this by translating `-L all` to `-L` before calling
    ip(6)tables.
]]--

local posix = require("tch.posix")
local isIpv6

-- Call iptables or ip6tables with provided args string.
-- The args table should represent valid ip(6)tables arguments,
-- but it will report back its error(s) if not.
local function iptables(args)
  local backend = (isIpv6 and "/usr/sbin/ip6tables") or "/usr/sbin/iptables"
  local _, errmsg = posix.execv(backend, args)
  -- execv() never returns, unless errors
  print("Error: " .. (errmsg or "unkown error"))
end

-- Fix the arg table when arguments `-L all` are provided.
-- This function returns the arg table, with `all` being removed
-- when `-L all` is provided (see summary for background).
-- This function also detects whether to call `ip6tables` instead of `iptables`
local function arg_fixup(arg)
  local args = {}

  -- This flag is set when finding arg `-L`.
  -- The next argument is then the chain name, or `all`
  local checknext=false

  for i=1, #arg do
    if checknext and arg[i] == "all" then
      -- `L all` was provided; do not append `all`, just reset the flag
      checknext = false
    elseif arg[i] == "--ipv6" then
      isIpv6 = true --simply select ip6tables; do not pass the argument
    else
      args[#args + 1] = arg[i]
    end

    -- When arg is `-L`, check its value for `all`
    if arg[i] == "-L" then
      checknext = true
    end
  end
  return args
end

iptables( arg_fixup(arg) )
