#!/usr/bin/env lua

--[[
  clash-iptables-wrapper is designed for the CLI's (clash) iptables and ip6tables command.
  It may be used from a root shell, but this is not its main purpose.

  Summary:
    The script calls `ip(6)tables` with the provided arguments, with one important exception:
       `-L all` and `-Z all`
       As the other options, `-L` and `-Z` is also passed through as is, except when it is set with value `all`.
       Value `all` is stripped from the arguments, so that `ip(6)tables` is executed with plain `-L` or `-Z`.
       When `-L` is set to a chain name, `-L 'that_chain_name'` is simply passed to ip(6)tables.
       Similarly when `-Z` is set to a chain name, `-Z 'that_chain_name'` is simply passed to ip(6)tables.

  Background:
    Declaring the clash command with flag `-L (string default "")` or `-Z (string default "")` is insufficient to get the arguments flow
    correctly from clash -> transformer -> ip(6)tables in all cases.

    Due to design, when `-L` or `-Z` is left empty, it never arrives at ip(6)tables, hence we would not be able to
    list all chains from ip(6)tables. The wrapper script covers this by translating `-L all` to `-L` and `-Z all` to `-Z`  before calling
    ip(6)tables.

  The wrapper script also determines whether to call `iptables` or `ip6tables`.
]]--

local posix = require("tch.posix")

-- Call iptables or ip6tables with provided args string.
-- The args table should represent valid ip(6)tables arguments,
-- but it will report back its error(s) if not.
local function iptables(args, ipv6)
  local backend = (ipv6 and "/usr/sbin/ip6tables") or "/usr/sbin/iptables"
  local _, errmsg = posix.execv(backend, args)
  -- execv() never returns, unless errors
  print("Error: " .. (errmsg or "unkown error"))
end

-- Fix the arg table when arguments `-L all` are provided.
-- This function returns the arg table, with `all` being removed
-- when `-L all` is provided (see summary for background).
--
-- This function also returns a flag that indicates
-- whether to call `ip6tables` instead of `iptables`.
local function arg_fixup(arguments)
  local fixedargs = {}
  local ipv6, lastarg

  for _, arg in ipairs(arguments) do
    if arg == "--ipv6" then
      ipv6 = true
    else
      if (lastarg == "-L" or lastarg == "-Z") and arg == "all" then
        -- filter out `all` for `-L`; see summary
      else
        fixedargs[#fixedargs + 1] = arg
      end
    end
    lastarg = arg
  end
  return fixedargs, ipv6
end

iptables( arg_fixup(arg) )
