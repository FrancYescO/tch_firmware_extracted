#!/bin/sh

# clash-coredump-wrapper is designed for the CLI's (clash) coredump command.
# It may be used from a root shell, but this is not its main purpose.

# Summary:
#   The script has two options available:
#   '-l'             : list coredump file(s) - in practice only one should exist.
#   '-p <file name>' : write the specified coredump file to stdout
#
#   These options must not be used in conjunction.

# The wrapper will simply cat the one and only coredump file that exists
# in `uci get system.@coredump[0].path` (if any) to stdout.
# Hence, `-p` is only intended for use with a redirection operator on a client.

. /lib/functions.sh

cmd="$1"
coredumpfile="$2"

_find() {
	local name="$1"

	# path for coredumps is configured in UCI.
	# only one path is handled by core-handler: @coredump[0].path
	# default to '/root' should the path not exist.
	local path=$(uci_get system @coredump[0] path '/root')

	# find .core.gz or .core files in the coredump path; coredump-handler will only store one file.
	# existing coredumps files are removed before a new one is stored.
	echo $(find "$path" -maxdepth 1 -name "$name" 2> /dev/null | head -1)
}

_list() {
	# search for coredump files according to configured action:
	#    compress -> *.core.gz
	#    store    -> *.core
	local action=$(uci_get system @coredump[0] action 'compress')
	local extension
	if [ "$action" = "compress" ]; then
		extension="*.core.gz"
	elif [ "$action" = "store" ]; then
		extension="*.core"
	else
		# don't know anything else
		return
	fi

	local file=$(_find "$extension")

	if [ -z "$file" ]; then
		echo "There are no coredump files"
	else
		# simply show the file name
		echo $(basename "$file")
	fi
}

_pipe() {
	local file="$1"
	file=$(_find "$file")
	if [ ! -z "$file" ]; then
		# simply cat (print) the file as binary data to the CLI; the client should pipe this data to a file
		# additionally, suppress any errors
		cat "$file" 2> /dev/null
	fi
}

if [ "$cmd" = "-l" ]; then
	_list
elif [ "$cmd" = "-p" ]; then
	_pipe "$coredumpfile"
else
	echo "Must be used with '-l' or '-p <coredump file>'"
fi
