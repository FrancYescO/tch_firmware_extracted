#!/usr/bin/env lua

local ubus = require("ubus")
local uci = require("uci")
local uloop = require("uloop")

local cursor = uci.cursor()
local configuration = cursor:get_all("mobiled", "firmware_upgrade") or {}
cursor:close()

local device_index = tonumber(configuration.dev_idx) or 1
local max_poll_attempts = tonumber(configuration.max_poll_attempts) or 30
local poll_interval = (tonumber(configuration.poll_interval) or 10) * 1000
local max_upgrade_duration = (tonumber(configuration.max_upgrade_duration) or (30 * 60)) * 1000

local default_error_message = configuration.default_error_message or "Upgrade failed"
local failed_to_start_message = configuration.failed_to_start_message
local invalid_parameters_message = configuration.invalid_parameters_message
local timeout_message = configuration.timeout_message
local error_code_messages = {
	[1] = configuration.unknown_error_message,
	[2] = configuration.not_supported_message,
	[3] = configuration.invalid_state_message,
	[4] = configuration.download_failed_message,
	[5] = configuration.invalid_image_message,
	[6] = configuration.flashing_failed_message
}

uloop.init()

local connection = ubus.connect()
if not connection then
	error("Failed to connect to ubus")
end

local error_message = "1," .. default_error_message

local function report_error(message)
	error_message = "1," .. (message or default_error_message)
	uloop.cancel()
end

-- If the firmware upgrade has already finished mobiled will not send out events
-- any more. In order to deal with this use the ubus call to query the current
-- status. If the firmware upgrade has finished the corresponding status will be
-- printed and this script will exit. If the firmware upgrade is still running
-- the script will stop polling but will wait for the event that indicates that
-- the firmware upgrade has finished.
local poll_attempts = 1
local poll_timer
poll_timer = uloop.timer(function()
	local result = connection:call("mobiled.device", "firmware_upgrade", {dev_idx = device_index})
	if not result.status then
		if poll_attempts < max_poll_attempts then
			-- Mobiled is probably not running yet, wait a while and try again.
			poll_timer:set(poll_interval)
			poll_attempts = poll_attempts + 1
		else
			report_error(timeout_message)
		end
	elseif result.status == "done" then
		error_message = "0"
		uloop.cancel()
	elseif result.status == "not_running" then
		report_error(failed_to_start_message)
	elseif result.status == "timeout" then
		report_error(timeout_message)
	elseif result.status == "invalid_parameters" then
		report_error(invalid_parameters_message)
	elseif result.status == "failed" then
		report_error(error_code_messages[result.error_code])
	end
end, 1)

local upgrade_timer = uloop.timer(function()
	report_error(timeout_message)
end, max_upgrade_duration)

connection:listen({
	["mobiled.firmware_upgrade"] = function(message)
		if message.dev_idx == device_index then
			if message.status == "done" then
				error_message = "0"
				uloop.cancel()
			elseif message.status == "timeout" then
				report_error(timeout_message)
			elseif message.status == "invalid_parameters" then
				report_error(invalid_parameters_message)
			elseif message.status == "failed" then
				report_error(error_code_messages[message.error_code])
			end
		end
	end
})

uloop.run()
print(error_message)
