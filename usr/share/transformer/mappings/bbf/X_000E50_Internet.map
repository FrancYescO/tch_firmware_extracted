local wanconn = require("transformer.shared.wanconnection")
local Multi_Services_X_000E50_Internet_ = {
  objectType = {
    name = "#ROOT.Services.X_000E50_Internet.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      WANConnection = {
        access = "readOnly",
        type = "string",
      },
    }
  }
}


local ucihelper = mapper("ucihelper")
local resolve = resolve

local binding = { config = "cwmpd", sectionname = "cwmpd_config", option = "interface" }
local function get_cwmpd_interface()
	return ucihelper.get_from_uci(binding)
end

Multi_Services_X_000E50_Internet_.get = function(mapping, paramname, key)
    local if_cwmp = get_cwmpd_interface()
    if mapping.objectType.name:match('^Device%.') then
        return resolve('Device.IP.Interface.{i}.', if_cwmp) or ""
    end
    local connkey, status = wanconn.get_connection_key(if_cwmp)
    if connkey and status then
        if status.proto == "pppoe" or status.proto == "pppoa" then
            return resolve("InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.", connkey) or ""
        else
            return resolve("InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.", connkey) or ""
        end
    end
    return ""
end

local duplicator = mapper("multiroot").duplicate
local duplicates = duplicator(Multi_Services_X_000E50_Internet_, "#ROOT", {"InternetGatewayDevice", "Device"})
for _, dupli in ipairs(duplicates) do
  register(dupli)
end
