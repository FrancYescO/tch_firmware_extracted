-- Automatically generated from Device:2.10
-- using generator version 2.3
local Multi_BulkData_Profile_i_CSVEncoding_ = {
  objectType = {
    name = "#ROOT.BulkData.Profile.{i}.CSVEncoding.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      FieldSeparator = {
        access = "readWrite",
        type = "string",
        default = ",",
      },
      RowSeparator = {
        access = "readWrite",
        type = "string",
        default = " ",
      },
      EscapeCharacter = {
        access = "readWrite",
        type = "string",
        default = "&quot;",
      },
      ReportFormat = {
        access = "readWrite",
        type = "string",
        enumeration = {
          "ParameterPerRow",
          "ParameterPerColumn",
        },
        default = "ParameterPerColumn",
      },
      RowTimestamp = {
        access = "readWrite",
        type = "string",
        enumeration = {
          "Unix-Epoch",
          "ISO-8601",
          "None",
        },
        default = "Unix-Epoch",
      },
    }
  }
}

local bulk_helper = require "transformer.shared.bulkhelper"
local register = register
local commitapply = commitapply

local get_map = {
  FieldSeparator = "csv_field_separator",
  RowSeparator = "csv_row_separator",
  EscapeCharacter = "csv_escape_character",
  ReportFormat = "csv_report_format",
  RowTimestamp = "csv_row_timestamp"
}

local set_map = {}

bulk_helper.SetProfileMap(Multi_BulkData_Profile_i_CSVEncoding_, {get = get_map, set = set_map}, commitapply)

Multi_BulkData_Profile_i_CSVEncoding_.getall = bulk_helper.getall

Multi_BulkData_Profile_i_CSVEncoding_.get = bulk_helper.get

Multi_BulkData_Profile_i_CSVEncoding_.set = bulk_helper.set

Multi_BulkData_Profile_i_CSVEncoding_.commit = bulk_helper.commit
Multi_BulkData_Profile_i_CSVEncoding_.revert = bulk_helper.revert

bulk_helper.register(Multi_BulkData_Profile_i_CSVEncoding_, register)

