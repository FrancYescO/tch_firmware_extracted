-- Automatically generated from InternetGatewayDevice:1.14
-- using generator version 2.3
local InternetGatewayDevice_LANDevice_i_WLANConfiguration_i_Stats_ = {
    objectType = {
        name = "InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.Stats.",
        access = "readOnly",
        minEntries = 1,
        maxEntries = 1,
        parameters = {
            ErrorsSent = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            ErrorsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            UnicastPacketsSent = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            UnicastPacketsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            DiscardPacketsSent = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            DiscardPacketsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            MulticastPacketsSent = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            MulticastPacketsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            BroadcastPacketsSent = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            BroadcastPacketsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
            UnknownProtoPacketsReceived = {
                access = "readOnly",
                activeNotify = "canDeny",
                type = "unsignedInt",
            },
        }
    }
}

local ubus = require("ubus")
local conn = ubus.connect()
local nwCommon = require("transformer.mapper.nwcommon")
local tostring = tostring

local function getDataFromSsidStats(key, option)
  local iface = key:gsub("_remote", "")
  local ssidStats = conn:call("wireless.ssid.stats", "get", { name = iface }) or {}
  if option and ssidStats then
    return ssidStats[iface] and ssidStats[iface][option] or ""
  end
  return ssidStats[iface] or {}
end

local wlanStatsMap = {
  UnicastPacketsSent = "tx_unicast_packets",
  UnicastPacketsReceived = "rx_unicast_packets",
  MulticastPacketsSent = "tx_multicast_packets",
  MulticastPacketsReceived = "rx_multicast_packets",
  BroadcastPacketsSent = "tx_broadcast_packets",
  BroadcastPacketsReceived = "rx_broadcast_packets",
  DiscardPacketsSent = "tx_discards",
  DiscardPacketsReceived = "rx_discards",
  ErrorsSent = "tx_errors",
  ErrorsReceived = "rx_errors",
}

local function getWLANStats(mapping, param, key)
  if param == "UnknownProtoPacketsReceived" then
    return nwCommon.getIntfStats(key, "rxerr", "")
  end
  return tostring(getDataFromSsidStats(key, wlanStatsMap[param]))
end

local function getallWLANStats(mapping, key)
  local ssidStats = getDataFromSsidStats(key)
  return {
    UnicastPacketsSent = ssidStats[wlanStatsMap["UnicastPacketsSent"]] and tostring(ssidStats[wlanStatsMap["UnicastPacketsSent"]]) or "",
    UnicastPacketsReceived = ssidStats[wlanStatsMap["UnicastPacketsReceived"]] and tostring(ssidStats[wlanStatsMap["UnicastPacketsReceived"]]) or "",
    MulticastPacketsSent = ssidStats[wlanStatsMap["MulticastPacketsSent"]] and tostring(ssidStats[wlanStatsMap["MulticastPacketsSent"]]) or "",
    MulticastPacketsReceived = ssidStats[wlanStatsMap["MulticastPacketsReceived"]] and tostring(ssidStats[wlanStatsMap["MulticastPacketsReceived"]]) or "",
    BroadcastPacketsSent = ssidStats[wlanStatsMap["BroadcastPacketsSent"]] and tostring(ssidStats[wlanStatsMap["BroadcastPacketsSent"]]) or "",
    BroadcastPacketsReceived = ssidStats[wlanStatsMap["BroadcastPacketsReceived"]] and tostring(ssidStats[wlanStatsMap["BroadcastPacketsReceived"]]) or "",
    DiscardPacketsSent = ssidStats[wlanStatsMap["DiscardPacketsSent"]] and tostring(ssidStats[wlanStatsMap["DiscardPacketsSent"]]) or "",
    DiscardPacketsReceived = ssidStats[wlanStatsMap["DiscardPacketsReceived"]] and tostring(ssidStats[wlanStatsMap["DiscardPacketsReceived"]]) or "",
    ErrorsSent = ssidStats[wlanStatsMap["ErrorsSent"]] and tostring(ssidStats[wlanStatsMap["ErrorsSent"]]) or "",
    ErrorsReceived = ssidStats[wlanStatsMap["ErrorsReceived"]] and tostring(ssidStats[wlanStatsMap["ErrorsReceived"]]) or "",
    UnknownProtoPacketsReceived = nwCommon.getIntfStats(key, "rxerr", "")
  }
end

InternetGatewayDevice_LANDevice_i_WLANConfiguration_i_Stats_.getall = getallWLANStats
InternetGatewayDevice_LANDevice_i_WLANConfiguration_i_Stats_.get = getWLANStats

register(InternetGatewayDevice_LANDevice_i_WLANConfiguration_i_Stats_)
