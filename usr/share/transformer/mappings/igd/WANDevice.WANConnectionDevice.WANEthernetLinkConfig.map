-- Automatically generated from InternetGatewayDevice:1.4
-- using generator version 2.1
local WANEthernetLinkConfig = {
  objectType = {
    name = "InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig.",
    access = "readOnly",
    minEntries = 0,
    maxEntries = 1,
    parameters = {
      EthernetLinkStatus = {
        access = "readOnly",
        type = "string",
        enumeration = {
          "Up",
          "Down",
          "Unavailable",
        },
      },
    }
  }
}

local wandevice = require 'transformer.shared.models.igd.wandevice'
local nwcommon = mapper("nwcommon")
local getDevtypeAndName = wandevice.getDevtypeAndName
local getIntfInfo = nwcommon.getIntfInfo

local devnames = {}

WANEthernetLinkConfig.entries = function(mapping, key, wandevice_key)
  --we are only interested in the key for the wandevice we are under as that dictates
  -- if this is DSL or Ethernet (or other)
  local devtype, devname = getDevtypeAndName(wandevice_key)
  if devtype == "ETH" then
    devnames[key] = devname
    return {"1"}
  end
  return {}
end

-- There's only one parameter so make the get() a function instead of a table with one function.
WANEthernetLinkConfig.get = function(mapping, param, key)
  local operstate = getIntfInfo(devnames[key], "operstate")
  if operstate == "up" then
    return "Up"
  end
  if operstate == "down" then
    return "Down"
  end
  return "Unavailable"
end

register(WANEthernetLinkConfig)
