-- Automatically generated from InternetGatewayDevice:1.3
-- using generator version 2.1
local InternetGatewayDevice_DeviceInfo_VendorConfigFile_i_ = {
  objectType = {
    name = "InternetGatewayDevice.DeviceInfo.VendorConfigFile.{i}.",
    access = "readOnly",
    numEntriesParameter = "VendorConfigFileNumberOfEntries",
    minEntries = 0,
    maxEntries = math.huge,
    parameters = {
      Name = {
        access = "readOnly",
        type = "string",
        max = "64",
      },
      Version = {
        access = "readOnly",
        type = "string",
        max = "16",
      },
      Date = {
        access = "readOnly",
        type = "dateTime",
      },
      Description = {
        access = "readOnly",
        type = "string",
        max = "256",
      },
    }
  }
}

local uci = require("uci")
local lfs = require("lfs")

local banks = {"bank_1", "bank_2"}
local entries = {}

InternetGatewayDevice_DeviceInfo_VendorConfigFile_i_.entries = function()
  if next (entries) == nil then
    for _, bank in ipairs(banks) do
      local mode = lfs.attributes("/overlay/" .. bank, "mode")
      if mode == "directory" then
        entries[#entries + 1] = bank
      end
    end
  end
  return entries
end

local templatebank = "/overlay/%s/etc/config"

InternetGatewayDevice_DeviceInfo_VendorConfigFile_i_.get = {
  Name = function(mapping, param, key, parentkey)
      return key
  end,
  Version = "1.00",
  Date = function(mapping, param, key, parentkey)
    -- Get UCI value from /overlay/**/etc/config, not directly from /etc/config
    -- So using uci.cursor, not transformer ucihelper
    local bankpath = string.format(templatebank, key)
    local cursor = uci.cursor(bankpath)
      return cursor:get("cwmpd", "cwmpd_config", "firstusedate") or "0001-01-01T00:00:00Z"
  end,
  Description = function(mapping, param, key, parentkey)
    return  "Vendor config file is " .. key .. " configuration"
  end,
}

register(InternetGatewayDevice_DeviceInfo_VendorConfigFile_i_)

