local popen = io.popen
local string = string
local register = register

local sys_log_ = {
    objectType = {
        name = "sys.log.",
        access = "readOnly",
        minEntries = 1,
        maxEntries = 1,
        parameters = {
            devicelog = {
                access = "readOnly",
                type = "string"
            },
            routingtable = {
                access = "readOnly",
                type = "string"
            },
            connections = {
                access = "readOnly",
                type = "string"
            },
        },
    }
}

local get = {
    devicelog = function()
    local log = popen("/sbin/logread")
    if log == nil then
        return ""
    end
    local logString = log:read("*a")
    log:close()
    if logString == nil then
        return ""
    end
    return string.sub(logString, -32768)
   end,

   routingtable = function()
    local log = popen("/sbin/route -n")
    if log == nil then
        return ""
    end
    local logString = log:read("*a")
    log:close()
    if logString == nil then
        return ""
    end
    return logString
   end,

   connections = function()
    local log = popen("cat /proc/net/nf_conntrack")
    if log == nil then
        return ""
    end
    local logString = log:read("*a")
    log:close()
    if logString == nil then
        return ""
    end
    return string.sub(logString,-32768)
   end
}

sys_log_.get = get
register(sys_log_)

