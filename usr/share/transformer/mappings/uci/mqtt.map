local mapper = mapper
local config_mqtt = "mqttjson_services"

-- uci.mqttjson_services
mapper("uci_1to1").registerConfigMap(config_mqtt)

-- uci.mqttjson_services.config
local mqtt_config = {
  config = config_mqtt,
  section = "config",
  options = { "enabled", "cert_location", "connection_url", "connection_port", "tls_enabled", "tls_certs", "tls_keyform", "log_level", "ui_version", "customer_name", "customer_name_enabled", "service_id_enabled", "ignore_physical_auth", "register", "backoff_minwait", "backoff_multiplier", "disable_whitelist" },
  lists = {"disable_handlers", "req_whitelist", "rsp_whitelist"}
}

mapper("uci_1to1").registerSimpleMap(mqtt_config)

-- uci.mqttjson_services.add_new_extender
local mqtt_addNewExtender = {
  config = config_mqtt,
  section = "add_new_extender",
  options = { "interval", "timeout"}
}

local uci_mqtt_addNewExtender = mapper("uci_1to1").createSimpleMap(mqtt_addNewExtender)
register(uci_mqtt_addNewExtender)

-- uci.mqttjson_services.notification
local mqtt_notification = {
  config = config_mqtt,
  type = "notification",
  options = { "event", "topicCommand"},
  lists = {"parameter", "gwParam"}
}

mapper("uci_1to1").registerNamedMultiMap(mqtt_notification)
