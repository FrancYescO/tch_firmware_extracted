-- Automatically generated from Device:2.10
-- using generator version 2.3
local Device_InterfaceStack_i_ = {
  objectType = {
    name = "Device.InterfaceStack.{i}.",
    access = "readOnly",
    numEntriesParameter = "InterfaceStackNumberOfEntries",
    minEntries = 0,
    maxEntries = math.huge,
    aliasParameter = "Alias",
    parameters = {
      Alias = {
        access = "readWrite",
        activeNotify = "canDeny",
        type = "string",
      },
      HigherLayer = {
        access = "readOnly",
        type = "string",
        max = "256",
        pathRef = true,
      },
      LowerLayer = {
        access = "readOnly",
        type = "string",
        max = "256",
        pathRef = true,
      },
    --[[ TODO
    HigherAlias = {
    access = "readOnly",
    type = "string",
    max = "64",
    },
    LowerAlias = {
    access = "readOnly",
    type = "string",
    max = "64",
    },
    --]]
    }
  }
}

local nwModel = require "transformer.shared.models.device2.network"
local resolve = resolve
local model

Device_InterfaceStack_i_.entries = function()
  model = nwModel.load()
  return model:getStackEntries()
end

Device_InterfaceStack_i_.get = {
  HigherLayer = function(mappings,param,key)
    return model:getStackHigherResolved(key, resolve)
  end,
  LowerLayer = function(mappings,param,key)
    return model:getStackLowerResolved(key, resolve)
  end,
}

-- A getall implementation is not done as it will not bring any improvement.

register(Device_InterfaceStack_i_)
