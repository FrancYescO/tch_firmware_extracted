-- Automatically generated from Device:2.10
-- using generator version 2.3
local Device_IPv6rd_ = {
  objectType = {
    name = "Device.IPv6rd.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      Enable = {
        access = "readOnly", -- readWrite currently not supported
        type = "boolean",
      },
      -- InterfaceSettingNumberOfEntries
      -- automatically created when Device.IPv6rd.InterfaceSetting.{i}. is loaded
    }
  }
}

local ubusConnection = mapper("ubus").connect()

Device_IPv6rd_.get = function()
  local networkDump = ubusConnection:call("network.interface", "dump", {})
  if networkDump and networkDump.interface then
    for _, intfValues in ipairs(networkDump.interface) do
      if intfValues.proto == "6rd" and intfValues.up then
        return "1"
      end
    end
  end
  return "0"
end

register(Device_IPv6rd_)
