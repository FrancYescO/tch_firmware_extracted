-- Automatically generated from Device:2.2
-- using generator version 2.1
local Device_DSL_Line_i_Stats_ = {
  objectType = {
    name = "Device.DSL.Line.{i}.Stats.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = 1,
    parameters = {
      BytesSent = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedLong",
      },
      BytesReceived = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedLong",
      },
      PacketsSent = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedLong",
      },
      PacketsReceived = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedLong",
      },
      ErrorsSent = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      ErrorsReceived = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      DiscardPacketsSent = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      DiscardPacketsReceived = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      TotalStart = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      ShowtimeStart = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      LastShowtimeStart = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      CurrentDayStart = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
      QuarterHourStart = {
        access = "readOnly",
        activeNotify = "canDeny",
        type = "unsignedInt",
      },
    }
  }
}

local common = mapper("nwcommon")
local xdslctl = require("transformer.shared.xdslctl")
local getIntfInfo = common.getIntfInfo

Device_DSL_Line_i_Stats_.get = {
  TotalStart = function(mapping, param, key)
    return xdslctl.stats("total", "time")
  end,
  ShowtimeStart = function(mapping, param, key)
    return xdslctl.stats("sincesync", "time")
  end,
  LastShowtimeStart = function(mapping, param, key)
    return xdslctl.stats("sincesync", "time")
  end,
  CurrentDayStart = function(mapping, param, key)
    return xdslctl.stats("currentday", "time")
  end,
  QuarterHourStart = function(mapping, param, key)
    return xdslctl.stats("currentquarter", "time")
  end,
  BytesSent = function(mapping, param, key)
    return getIntfInfo(key, "tx_bytes")
  end,
  BytesReceived = function(mapping, param, key)
    return getIntfInfo(key, "rx_bytes")
  end,
  PacketsSent = function(mapping, param, key)
    return getIntfInfo(key, "tx_packets")
  end,
  PacketsReceived = function(mapping, param, key)
    return getIntfInfo(key, "rx_packets")
  end,
  ErrorsSent = function(mapping, param, key)
    return getIntfInfo(key, "tx_errors")
  end,
  ErrorsReceived = function(mapping, param, key)
    return getIntfInfo(key, "rx_errors")
  end,
  DiscardPacketsSent = function(mapping, param, key)
    return getIntfInfo(key, "tx_dropped")
  end,
  DiscardPacketsReceived = function(mapping, param, key)
    return getIntfInfo(key, "rx_dropped")
  end,
}

register(Device_DSL_Line_i_Stats_)
