local open, string, register = io.open, string, register
local leds = require("transformer.shared.leds")

local Multi_Leds_i_ = {
  objectType = {
    name = "Device.Leds.X_000E50_Led.{i}.",
    access = "readOnly",
    minEntries = 1,
    maxEntries = math.huge,
    parameters = {
      Name = {
        access = "readOnly",
        type = "string",
      },
      Status = {
        access = "readOnly",
        type = "string",
        enumeration = {
             "On",
             "Off",
             "Blinking",
             "Netdev",
        },
      },
      Brightness = {
        access = "readOnly",
        type = "string",
        enumeration = {
             "Low",
             "Middle",
             "high",
             "None",
        },
      },
      Color = {
        access = "readOnly",
        type = "string",
        enumeration = {
             "Red",
             "Orange",
             "Blue",
             "Green",
             "Cyan",
             "White",
             "Magenta",
             "None",
        },
      },
    },
  }
}

local ledsInfo = {}

Multi_Leds_i_.entries = function(mapping)
  local entries = {}
  ledsInfo = leds.getLedsInfo()
  for k, v in pairs(ledsInfo) do
    entries[#entries+1] = k
  end
  return entries
end

Multi_Leds_i_.get = {
  Name = function(mapping, param, key)
    return key
  end,
  Status = function(mapping, param, key)
    return ledsInfo[key].mixStatus
  end,
  Brightness = function(mapping, param, key)
    return ledsInfo[key].mixBrightness
  end,
  Color = function(mapping, param, key)
    return ledsInfo[key].mixColor
  end,
}

register(Multi_Leds_i_)

