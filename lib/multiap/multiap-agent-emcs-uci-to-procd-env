
config_load multiap

###EMCS###
  config_get val controller_selection enabled
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_AUTOSELECTION_ENABLED="$val"
  fi

  config_get val controller_selection priority
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_PRIORITY="$val"
  fi

  config_get val controller_selection start_timeout
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_START_TIMEOUT="$val"
  fi

  config_get val controller_selection kill_timeout
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_KILL_TIMEOUT="$val"
  fi

  config_get val controller_selection topology_query_interval
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_TOPO_QUERY_INTERVAL="$val"
  fi

  config_get val controller_selection discovery_interval
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_DISCOVERY_INTERVAL="$val"
  fi

  config_get val controller_selection discovery_type
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_DISCOVERY_TYPE="$val"
  fi

  config_get val controller_selection emcs_trigger_criteria
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_TRIGGER_CRITERIA="$val"
  fi

  config_get val controller_selection emcs_selection_criteria
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_SELECT_CRITERIA="$val"
  fi

  config_get val controller_selection emcs_stopcontroller_criteria
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_STOP_CRITERIA="$val"
  fi

  config_get val controller_selection emcs_legacy_mode
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_LEGACY_MODE_ENABLED="$val"
  fi

  config_get val controller_selection emcs_unsupported_node_fallback
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_UNSUPPORTED_NODE_FALLBACK="$val"
  fi

  config_get val controller_selection start_timeout_delay
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_START_TIMEOUT_DELAY="$val"
  fi

  config_get val controller_selection prevrole
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_PREV_ROLE="$val"
  fi

  config_get val controller_selection config_propagation
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_CONFIG_PROPAGATION="$val"
  fi

  config_get val controller_selection periodic_ipcheck
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_IP_CHECK_PERIOD_ENABLED="$val"
  fi

  config_get val controller_selection ipcheck_interval
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_IP_CHECK_PERIOD="$val"
  fi

  config_get val controller_selection remote
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_REMOTE="$val"
  fi

  config_get val controller_selection emcs_iface_list
  if [ -n "$val" ]; then
      procd_append_param env MAP_AGENT_EMCS_UPLINK_LIST="$val"
  fi

